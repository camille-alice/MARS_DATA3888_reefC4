knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/camillekarski/Documents/Uni/DATA3888')
library(tidyverse)
library(tuneR)
library(devtools)
library(ggplot2)
library(tsfeatures)
library(sf)
#reading in reef data set
reef_df =  read.csv("./DATA3888_data/Reef Check Data Raw.csv")
#reading in geomorphic data set
rugosity_df = st_read("./DATA3888_data/geomorphic.gpkg")
reef_df
#reading in reef data set ! with variables
reef_df =  read.csv("./DATA3888_data/Reef_Check_with_cortad_variables_with_annual_rate_of_SST_change.csv")
#reading in geomorphic data set
rugosity_df = st_read("./DATA3888_data/geomorphic.gpkg")
reef_df
rugosity_df
head(rugosity_df)
rugosity_df[4]
rugosity_df[1]
class(rugosity_df)
class(rugosity_df)
class(reef_df)
reef_st = st_read(reef_df)
#change to class sf
reef_df$geom = reef_df %>% st_as_sf(coords = c("Longitude.Degrees", "Latitude.Degrees"), crs=4326)
reef_df
class(reef_df$geom)
reef_df$geom
st_crs(reef_df$geom)
st_crs(rugosity_df)
#change to class sf
reef_df$geomT = reef_df %>% st_as_sf(coords = c("Longitude.Degrees", "Latitude.Degrees"))
#checking to ensure both are same CRS
st_crs(reef_df$geomT)
#st_crs(rugosity_df)
#change to class sf
reef_df$geom = reef_df %>% st_as_sf(coords = c("Longitude.Degrees", "Latitude.Degrees"), crs=4326)
#checking to ensure both are same CRS
st_crs(reef_df$geom)
st_crs(rugosity_df)
#Reading in Data
reef = read.csv("DATA3888_data/Reef_Check_with_cortad_variables_with_annual_rate_of_SST_change.csv")
world_map = map_data("world")
#creating new dataframe for visualization
reef_vis = data.frame(Reef.ID = reef$Reef.ID, Reef.Name = reef$Reef.Name, Country = reef$Country, Average_bleaching = reef$Average_bleaching, lat = reef$Latitude.Degrees, wraplong = reef$Longitute.Degrees)
reef
#Reading in Data
reef = read.csv("DATA3888_data/Reef_Check_with_cortad_variables_with_annual_rate_of_SST_change.csv")
world_map = map_data("world")
#creating new dataframe for visualization
reef_vis = data.frame(Reef.ID = reef$Reef.ID, Reef.Name = reef$Reef.Name, Country = reef$Country, Average_bleaching = reef$Average_bleaching, lat = reef$Latitude.Degrees, wraplong = reef$Longitute.Degrees)
reef_vis
reef
world_map
#creating data frame grouped by reef.id and obtaining mean over all years, only keeping distinct rows
reef_gpd = reef %>% group_by(Reef.ID) %>%
mutate(Average_bleaching_m = round(mean(Average_bleaching),2)) %>%
distinct(Reef.ID, .keep_all=TRUE)
#re ordering so data appears on map with most bleached on top as ggplot plots from row=1
reef_gpd = reef_gpd[order(reef_gpd$Average_bleaching_m),]
reef_vis_map = ggplot() +
geom_polygon(data =world_map, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data =reef_gpd, aes(x= wraplong, y=lat,
size=Average_bleaching_m,
color=Average_bleaching_m,
ids = Reef.Name,
text = paste('Reef Name: ', reef_gpd$Reef.Name,
'<br>Country: ', reef_gpd$Country,
'<br>Bleaching %: ', reef_gpd$Average_bleaching_m)),
alpha = 0.7) +
scale_colour_viridis(option = "plasma") + #guide = "legend",
labs(x = "Longitude", y = "Latitude") +
ggtitle("Average Coral Bleaching", subtitle = "From 1997-2017") +
theme_minimal() +
theme(plot.title = element_text(size = 14, face = "bold"),
legend.title=element_text(size=10),
legend.text=element_text(size=9),
legend.position="bottom") +
guides(color= guide_legend(title = "Average % of Coral Bleached"),size=guide_legend(title = "Average % of Coral Bleached"))
#creating data frame grouped by reef.id and obtaining mean over all years, only keeping distinct rows
reef_gpd = reef %>% group_by(Reef.ID) %>%
mutate(Average_bleaching_m = round(mean(Average_bleaching),2)) %>%
distinct(Reef.ID, .keep_all=TRUE)
#re ordering so data appears on map with most bleached on top as ggplot plots from row=1
reef_gpd = reef_gpd[order(reef_gpd$Average_bleaching_m),]
reef_vis_map = ggplot() +
geom_polygon(data =world_map, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data =reef_gpd, aes(x= wraplong, y=lat,
size=Average_bleaching_m,
color=Average_bleaching_m,
ids = Reef.Name,
text = paste('Reef Name: ', reef_gpd$Reef.Name,
'<br>Country: ', reef_gpd$Country,
'<br>Bleaching %: ', reef_gpd$Average_bleaching_m)),
alpha = 0.7) +
scale_colour_viridis(option = "plasma") + #guide = "legend",
labs(x = "Longitude", y = "Latitude") +
ggtitle("Average Coral Bleaching", subtitle = "From 1997-2017") +
theme_minimal() +
theme(plot.title = element_text(size = 14, face = "bold"),
legend.title=element_text(size=10),
legend.text=element_text(size=9),
legend.position="bottom") +
guides(color= guide_legend(title = "Average % of Coral Bleached"),size=guide_legend(title = "Average % of Coral Bleached"))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/camillekarski/Documents/Uni/DATA3888')
library(tidyverse)
library(tuneR)
library(devtools)
library(ggplot2)
library(tsfeatures)
library(sf)
library(maps)
library(reshape2)
library(viridis)
library(plotly)
library(GGally)
#creating data frame grouped by reef.id and obtaining mean over all years, only keeping distinct rows
reef_gpd = reef %>% group_by(Reef.ID) %>%
mutate(Average_bleaching_m = round(mean(Average_bleaching),2)) %>%
distinct(Reef.ID, .keep_all=TRUE)
#re ordering so data appears on map with most bleached on top as ggplot plots from row=1
reef_gpd = reef_gpd[order(reef_gpd$Average_bleaching_m),]
reef_vis_map = ggplot() +
geom_polygon(data =world_map, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data =reef_gpd, aes(x= wraplong, y=lat,
size=Average_bleaching_m,
color=Average_bleaching_m,
ids = Reef.Name,
text = paste('Reef Name: ', reef_gpd$Reef.Name,
'<br>Country: ', reef_gpd$Country,
'<br>Bleaching %: ', reef_gpd$Average_bleaching_m)),
alpha = 0.7) +
scale_colour_viridis(option = "plasma") + #guide = "legend",
labs(x = "Longitude", y = "Latitude") +
ggtitle("Average Coral Bleaching", subtitle = "From 1997-2017") +
theme_minimal() +
theme(plot.title = element_text(size = 14, face = "bold"),
legend.title=element_text(size=10),
legend.text=element_text(size=9),
legend.position="bottom") +
guides(color= guide_legend(title = "Average % of Coral Bleached"),size=guide_legend(title = "Average % of Coral Bleached"))
#scale_size_continuous(limits=c(0, 100), breaks=seq(0,100, by=25)) +
#theme(legend.position="none")
#stat_density2d(data = reef_gpd, aes(x = wraplong, y= lat, fill = Average_bleaching, alpha = I(.5)),
# size = 1, bins = 36, geom = "polygon", show.legend = F) + scale_fill_gradient(low = "yellow", high = "red") +
reef_vis_map
reef
#creating data frame grouped by reef.id and obtaining mean over all years, only keeping distinct rows
reef_gpd = reef %>% group_by(Reef.ID) %>%
mutate(Average_bleaching_m = round(mean(Average_bleaching),2)) %>%
distinct(Reef.ID, .keep_all=TRUE)
#re ordering so data appears on map with most bleached on top as ggplot plots from row=1
reef_gpd = reef_gpd[order(reef_gpd$Average_bleaching_m),]
reef_vis_map = ggplot() +
geom_polygon(data =world_map, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data =reef_gpd, aes(x= Longitude.Degrees, y=Latitude.Degrees,
size=Average_bleaching_m,
color=Average_bleaching_m,
ids = Reef.Name,
text = paste('Reef Name: ', reef_gpd$Reef.Name,
'<br>Country: ', reef_gpd$Country,
'<br>Bleaching %: ', reef_gpd$Average_bleaching_m)),
alpha = 0.7) +
scale_colour_viridis(option = "plasma") + #guide = "legend",
labs(x = "Longitude", y = "Latitude") +
ggtitle("Average Coral Bleaching", subtitle = "From 1997-2017") +
theme_minimal() +
theme(plot.title = element_text(size = 14, face = "bold"),
legend.title=element_text(size=10),
legend.text=element_text(size=9),
legend.position="bottom") +
guides(color= guide_legend(title = "Average % of Coral Bleached"),size=guide_legend(title = "Average % of Coral Bleached"))
#scale_size_continuous(limits=c(0, 100), breaks=seq(0,100, by=25)) +
#theme(legend.position="none")
#stat_density2d(data = reef_gpd, aes(x = wraplong, y= lat, fill = Average_bleaching, alpha = I(.5)),
# size = 1, bins = 36, geom = "polygon", show.legend = F) + scale_fill_gradient(low = "yellow", high = "red") +
reef_vis_map
rugosity_df
class(rugosity_df)
ggplot(data = rugosity_df) +
geom_sf()
ggplot() +
geom_polygon(data = world_map,
aes(x = long, y = lat, group = group),
colour = "black", fill = "gray90") +
geom_polygon(data = rugosity_df,
colour = "red", fill = "gray80") +
theme_void()
rugosity_df
ggplot() +
geom_polygon(data = world_map,
aes(x = long, y = lat, group = group),
colour = "black", fill = "gray90") +
geom_polygon(data = rugosity_df,aes(group = class),
colour = "red", fill = "gray80") +
theme_void()
ggplot() +
geom_polygon(data = world_map,
aes(x = long, y = lat, group = group),
colour = "black", fill = "gray90") +
geom_polygon(data = rugosity_df,aes(x = geom, group = class),
colour = "red", fill = "gray80") +
theme_void()
ggplot() +
geom_polygon(data = world_map,
aes(x = long, y = lat, group = group),
colour = "black", fill = "gray90") +
geom_sf(data = rugosity_df,aes(group = class),
colour = "red", fill = "gray80") +
theme_void()
ggplot() +
geom_polygon(data = world_map,
aes(x = long, y = lat, group = group),
colour = "grey", fill = "gray90") +
geom_sf(data = rugosity_df,aes(group = class),
colour = "red", fill = "gray80") +
theme_void()
#checking to ensure both are same CRS
#st_crs(reef_df$geom)
st_crs(world_map)
ggplot() +
geom_sf(data = reef_df,
colour = "grey", fill = "blue") +
geom_sf(data = rugosity_df,aes(group = class),
colour = "red", fill = "gray80") +
theme_void()
ggplot() +
geom_sf(data = reef_df$geom,
colour = "grey", fill = "blue") +
geom_sf(data = rugosity_df,aes(group = class),
colour = "red", fill = "gray80") +
theme_void()
reef_test =st_read("DATA3888_data/Reef_Check_with_cortad_variables_with_annual_rate_of_SST_change.csv")
ggplot(data = rugosity_df) +
geom_sf()
ggplot() +
geom_polygon(data = world,
aes(x = long, y = lat, group = group),
colour = "black", fill = "gray90") +
geom_polygon(data = rugosity_df,
aes(x = long, y = lat, group = group),
colour = "red", fill = "gray80") +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/camillekarski/Documents/Uni/DATA3888')
library(plyr)
library(tidyverse)
library(tuneR)
library(devtools)
library(ggplot2)
library(tsfeatures)
library(sf)
library(maps)
library(reshape2)
library(viridis)
library(plotly)
library(GGally)
#reading in reef data set ! with variables as sf object using st_read
reef_df =st_read("./DATA3888_data/Reef_Check_with_cortad_variables_with_annual_rate_of_SST_change.csv",
options=c("X_POSSIBLE_NAMES=Longitude.Degrees","Y_POSSIBLE_NAMES=Latitude.Degrees"))
#reading in reef data set ! with variables as sf object using st_read
reef_df =st_read("./DATA3888_data/Reef_Check_with_cortad_variables_with_annual_rate_of_SST_change.csv",
options=c("X_POSSIBLE_NAMES=Longitude.Degrees","Y_POSSIBLE_NAMES=Latitude.Degrees"))
#setting reef_df to same CRS
st_crs(reef_df) = 4326
#function for extracting features from zipped archives
reef_f_extract = function(file_path,zip_name,feature_path,out_dir, reef_df){
file_ls = as.character(unzip(paste0(file_path,zip_name), list = TRUE)$Name)
feature_filename = str_subset(file_ls, feature_path)
if (length(feature_filename) != 0){
unzip(paste0(file_path,zip_name), files=feature_filename, exdir = out_dir)
rugosity_df = st_read(paste0(out_dir, feature_filename))
sf_use_s2(FALSE)
reef_join_df = st_join(reef_df, rugosity_df)
}#end if
return(reef_join_df)
} #end function
# file name containing all data: Global-Dataset-20211006223100
file_path = "./DATA3888_data/Global-Dataset-20211006223100.nosync/"
#setting new directory for where data will go
outDir = "./DATA3888_data/geomorphic_all/"
#target file name for extraction
geom_filepath = "^Geomorphic-Map/geomorphic"
reef_join_df = reef_df
test_error = "Northern-Caribbean--Florida----Bahamas-20201125220500.zip"
north_test = reef_f_extract(file_path,test_error,geom_filepath,outDir,reef_join_df)
#reading in reef data set ! with variables as sf object using st_read
reef_df =st_read("./DATA3888_GitHub/MARS_DATA3888_reefC4/Data/reef_geomorphic_joined.gpkg")
#reading in reef data set ! with variables as sf object using st_read
reef_df =st_read("./DATA3888_GitHub/MARS_DATA3888_reefC4/Data/reef_geomorphic_joined.gpkg")
#reading in reef data set ! with variables as sf object using st_read
reef_df =st_read("./DATA3888_GitHub/MARS_DATA3888_reefC4/Data/reef_geomorphic_joined.gpkg")
#setting reef_df to same CRS
st_crs(reef_df) = 4326
# file name containing all data: Global-Dataset-20211006223100
file_path = "./DATA3888_data/Global-Dataset-20211006223100.nosync/"
#creating list of all files in folder
files = list.files(path=file_path, pattern=".zip$", recursive = F)
#setting new directory for where data will go
outDir = "./DATA3888_data/geomorphic_all/"
#target file name for extraction
geom_filepath = "^Geomorphic-Map/geomorphic"
reef_join_df = reef_df
files
reef_df
test_geom = st_read("geomorphic.gpkg")
test_geom = st_read("/DATA3888_data/geomorphic_test/Geomorphic-Map/geomorphic.gpkg")
test_geom = st_read("./DATA3888_data/geomorphic_test/Geomorphic-Map/geomorphic.gpkg")
test_geom = st_read("./DATA3888_data/geomorphic_test/Geomorphic-Map/geomorphic.gpkg")
test_geom = st_read("./DATA3888_data/geomorphic_test/Geomorphic-Map/geomorphic.gpkg")
head(test_geom)
second_files = files[17:]
second_files = files[17:]
second_files = files[:17]
second_files = files[17::]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/camillekarski/Documents/Uni/DATA3888')
library(plyr)
library(tidyverse)
library(tuneR)
library(devtools)
library(ggplot2)
library(tsfeatures)
library(sf)
library(maps)
library(reshape2)
library(viridis)
library(plotly)
library(GGally)
#reading in reef data set ! with variables as sf object using st_read
reef_df =st_read("./DATA3888_GitHub/MARS_DATA3888_reefC4/Data/reef_geomorphic_joined.gpkg")
#setting reef_df to same CRS
st_crs(reef_df) = 4326
# file name containing all data: Global-Dataset-20211006223100
file_path = "./DATA3888_data/Global-Dataset-20211006223100.nosync/"
#setting new directory for where data will go
outDir = "./DATA3888_data/geomorphic_all/"
#target file name for extraction
geom_filepath = "^Geomorphic-Map/geomorphic"
reef_join_df = reef_df
test_error = "Northern-Caribbean--Florida----Bahamas-20201125220500.zip"
north_test = reef_f_extract(file_path,test_error,geom_filepath,outDir,reef_join_df)
second_files = files[[17:]]
second_files = files[17]
second_files
second_files = files[17:31]
second_files
# file name containing all data: Global-Dataset-20211006223100
file_path = "./DATA3888_data/Global-Dataset-20211006223100.nosync/"
#creating list of all files in folder
files = list.files(path=file_path, pattern=".zip$", recursive = F)
#setting new directory for where data will go
outDir = "./DATA3888_data/geomorphic_all/"
#target file name for extraction
geom_filepath = "^Geomorphic-Map/geomorphic"
reef_join_df = reef_df
second_files = files[17:31]
#commented out so as not to run again
for (i in second_files) {
reef_join_df = reef_f_extract(file_path,i,geom_filepath,outDir,reef_join_df)
}
reef_join_df
#there is an easier way to do this I am just tired rn
reef_join_c = reef_join_df %>% mutate(class = coalesce(class.x, class.y, class.x.1, class.y.1, class.x.2, class.y.2, class.x.3, class.y.3, class.x.4, class.y.4, class.x.5, class.y.5, class.x.6, class.y.6, class.x.7, class.y.7)) %>%
select(-class.x, -class.y, -class.x.1, -class.y.1, -class.x.2, -class.y.2, -class.x.3, -class.y.3, -class.x.4, -class.y.4, -class.x.5, -class.y.5, -class.x.6, -class.y.6, class.x.7, class.y.7)
#write to gpkg
#st_write(reef_join_c, 'reef_geomorphic_joined.gpkg')
reef_join_c
#there is an easier way to do this I am just tired rn
reef_join_c = reef_join_df %>% mutate(class = coalesce(class.x, class.y, class.x.1, class.y.1, class.x.2, class.y.2, class.x.3, class.y.3, class.x.4, class.y.4, class.x.5, class.y.5, class.x.6, class.y.6, class.x.7, class.y.7)) %>%
select(-class.x, -class.y, -class.x.1, -class.y.1, -class.x.2, -class.y.2, -class.x.3, -class.y.3, -class.x.4, -class.y.4, -class.x.5, -class.y.5, -class.x.6, -class.y.6, -class.x.7, -class.y.7)
#write to gpkg
#st_write(reef_join_c, 'reef_geomorphic_joined.gpkg')
reef_join_c
#there is an easier way to do this I am just tired rn
reef_join_c = reef_join_df %>% mutate(class = coalesce(class.x, class.y, class.x.1, class.y.1, class.x.2, class.y.2, class.x.3, class.y.3, class.x.4, class.y.4, class.x.5, class.y.5, class.x.6, class.y.6, class.x.7, class.y.7)) %>%
select(-class.x, -class.y, -class.x.1, -class.y.1, -class.x.2, -class.y.2, -class.x.3, -class.y.3, -class.x.4, -class.y.4, -class.x.5, -class.y.5, -class.x.6, -class.y.6, -class.x.7, -class.y.7)
#write to gpkg
st_write(reef_join_c, 'reef_geomorphic_joined.gpkg')
#removing NAs for vis
reef_join_c_NA = reef_join_c %>% drop_na()
world_map = map_data("world")
ggplot() +
geom_polygon(data =world_map, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_sf(data = reef_join_c_NA, aes(colour = class), alpha=0.6) +
#geom_sf(data = rugosity_df_small, aes(colour = class)) + #commented out as dataset is too large
theme_void()
